import { FilterType } from "./TodoApp";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";

interface TodoFiltersProps {
  filter: FilterType;
  onFilterChange: (filter: FilterType) => void;
  activeCount: number;
  completedCount: number;
}

export const TodoFilters = ({
  filter,
  onFilterChange,
  activeCount,
  completedCount,
}: TodoFiltersProps) => {
  const filters: { key: FilterType; label: string; count?: number }[] = [
    { key: "all", label: "All", count: activeCount + completedCount },
    { key: "active", label: "Active", count: activeCount },
    { key: "completed", label: "Completed", count: completedCount },
  ];

  return (
    <div className="flex items-center justify-between mb-6 p-4 bg-secondary/30 rounded-lg">
      <div className="flex gap-2">
        {filters.map(({ key, label, count }) => (
          <Button
            key={key}
            variant={filter === key ? "default" : "ghost"}
            size="sm"
            onClick={() => onFilterChange(key)}
            className="relative"
          >
            {label}
            {count !== undefined && count > 0 && (
              <Badge
                variant={filter === key ? "secondary" : "outline"}
                className="ml-2 text-xs"
              >
                {count}
              </Badge>
            )}
          </Button>
        ))}
      </div>
      
      {(activeCount > 0 || completedCount > 0) && (
        <div className="text-sm text-muted-foreground">
          {activeCount > 0 && (
            <span className="mr-4">
              {activeCount} active
            </span>
          )}
          {completedCount > 0 && (
            <span className="text-success">
              {completedCount} completed
            </span>
          )}
        </div>
      )}
    </div>
  );
};